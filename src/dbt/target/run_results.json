{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v6.json", "dbt_version": "1.10.4", "generated_at": "2025-07-12T13:31:17.408812Z", "invocation_id": "5e6038f5-a39a-428b-9f53-b650cf7c9461", "invocation_started_at": "2025-07-12T13:31:15.484510Z", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-12T13:31:16.923823Z", "completed_at": "2025-07-12T13:31:16.939022Z"}, {"name": "execute", "started_at": "2025-07-12T13:31:16.940053Z", "completed_at": "2025-07-12T13:31:17.062448Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.14227771759033203, "adapter_response": {"_message": "CREATE VIEW", "code": "CREATE VIEW", "rows_affected": -1}, "message": "CREATE VIEW", "failures": null, "unique_id": "model.medical_dbt.dim_dates", "compiled": true, "compiled_code": "-- models/marts/dim_dates.sql\r\n\r\nWITH date_spine AS (\r\n    SELECT\r\n        GENERATE_SERIES(\r\n            '2023-01-01'::DATE,\r\n            CURRENT_DATE + INTERVAL '1 year',\r\n            '1 day'::INTERVAL\r\n        )::DATE AS date_day\r\n),\r\n\r\ndate_attributes AS (\r\n    SELECT\r\n        date_day,\r\n        EXTRACT(YEAR FROM date_day) AS year,\r\n        EXTRACT(MONTH FROM date_day) AS month,\r\n        TO_CHAR(date_day, 'Month') AS month_name,\r\n        EXTRACT(DAY FROM date_day) AS day_of_month,\r\n        EXTRACT(DOW FROM date_day) AS day_of_week, -- Sunday = 0, Saturday = 6\r\n        TO_CHAR(date_day, 'Day') AS day_name,\r\n        EXTRACT(DOY FROM date_day) AS day_of_year,\r\n        EXTRACT(WEEK FROM date_day) AS week_of_year,\r\n        EXTRACT(QUARTER FROM date_day) AS quarter_of_year,\r\n        TO_CHAR(date_day, 'YYYY-MM') AS year_month,\r\n        TO_CHAR(date_day, 'YYYY-MM-DD') AS full_date_string,\r\n        (CASE WHEN EXTRACT(DOW FROM date_day) IN (0, 6) THEN TRUE ELSE FALSE END) AS is_weekend\r\n    FROM date_spine\r\n)\r\n\r\nSELECT *\r\nFROM date_attributes", "relation_name": "\"medical_insights\".\"public\".\"dim_dates\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-12T13:31:17.076577Z", "completed_at": "2025-07-12T13:31:17.088038Z"}, {"name": "execute", "started_at": "2025-07-12T13:31:17.089051Z", "completed_at": "2025-07-12T13:31:17.138089Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.06571578979492188, "adapter_response": {"_message": "CREATE VIEW", "code": "CREATE VIEW", "rows_affected": -1}, "message": "CREATE VIEW", "failures": null, "unique_id": "model.medical_dbt.fct_image_detections", "compiled": true, "compiled_code": "-- models/marts/fct_image_detections.sql\r\n\r\nSELECT\r\n    md5(concat(message_id::text, object_class, detection_time::text)) AS detection_pk, -- surrogate key\r\n    message_id,\r\n    image_id,\r\n    object_class,\r\n    confidence_score,\r\n    detection_time\r\nFROM (\r\n    VALUES\r\n        (NULL, NULL, NULL, NULL, NULL) -- Placeholder row, to be replaced by enrichment process\r\n) AS t(message_id, image_id, object_class, confidence_score, detection_time)\r\nWHERE message_id IS NOT NULL", "relation_name": "\"medical_insights\".\"public\".\"fct_image_detections\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-12T13:31:17.147372Z", "completed_at": "2025-07-12T13:31:17.159431Z"}, {"name": "execute", "started_at": "2025-07-12T13:31:17.160459Z", "completed_at": "2025-07-12T13:31:17.227816Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.08332037925720215, "adapter_response": {"_message": "CREATE VIEW", "code": "CREATE VIEW", "rows_affected": -1}, "message": "CREATE VIEW", "failures": null, "unique_id": "model.medical_dbt.stg_telegram_messages", "compiled": true, "compiled_code": "-- models/staging/stg_telegram_messages.sql\n\nWITH raw_messages AS (\n    SELECT\n        id,\n        channel_name,\n        message_id,\n        data AS raw_data,\n        scraped_at\n    FROM \"medical_insights\".\"raw\".\"telegram_messages\"\n),\n\ncleaned_messages AS (\n    SELECT\n        id,\n        channel_name,\n        message_id,\n        scraped_at,\n        raw_data->>'message' AS message_text,\n        (raw_data->>'date')::TIMESTAMP AS message_date,\n        (raw_data->>'views')::INT AS views_count,\n        (raw_data->>'forwards')::INT AS forwards_count,\n        (raw_data->'replies'->>'replies') AS replies_count, -- Fixed extraction for replies_count\n        (raw_data->>'reactions') IS NOT NULL AS has_reactions,\n        (raw_data->>'photo') IS NOT NULL AS has_photo,\n        -- Extract product mentions (enhanced regex for Ethiopian context)\n        REGEXP_MATCHES(\n            raw_data->>'message',\n            '(?i)(paracetamol|amoxicillin|ibuprofen|diclofenac|metronidazole|coartem|albendazole|ORS|syrup|tablet|capsule|suspension|injection|vaccine|antimalarial|antibiotic|antifungal|antiviral|cream|pill)s?',\n            'g'\n        ) AS product_mentions,\n        channel_name || '-' || message_id AS channel_message_unique\n    FROM raw_messages\n    WHERE raw_data->>'message' IS NOT NULL OR raw_data->>'photo' IS NOT NULL\n),\n\ndeduped_messages AS (\n    SELECT *,\n        ROW_NUMBER() OVER (PARTITION BY channel_name, message_id ORDER BY scraped_at ASC) AS rn\n    FROM cleaned_messages\n)\n\nSELECT\n    id,\n    channel_name,\n    message_id,\n    message_text,\n    message_date,\n    COALESCE(views_count, 0) AS views_count,\n    COALESCE(forwards_count, 0) AS forwards_count,\n    COALESCE(replies_count::INT, 0) AS replies_count,\n    has_reactions,\n    has_photo,\n    product_mentions,\n    scraped_at,\n    channel_message_unique\nFROM deduped_messages\nWHERE rn = 1", "relation_name": "\"medical_insights\".\"public\".\"stg_telegram_messages\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-12T13:31:17.241797Z", "completed_at": "2025-07-12T13:31:17.252600Z"}, {"name": "execute", "started_at": "2025-07-12T13:31:17.253957Z", "completed_at": "2025-07-12T13:31:17.307321Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.06918454170227051, "adapter_response": {"_message": "CREATE VIEW", "code": "CREATE VIEW", "rows_affected": -1}, "message": "CREATE VIEW", "failures": null, "unique_id": "model.medical_dbt.dim_channels", "compiled": true, "compiled_code": "-- models/marts/dim_channels.sql\n\nSELECT DISTINCT\n    channel_name,\n    MD5(channel_name) AS channel_sk -- Surrogate key for channel\nFROM \"medical_insights\".\"public\".\"stg_telegram_messages\"", "relation_name": "\"medical_insights\".\"public\".\"dim_channels\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-12T13:31:17.317275Z", "completed_at": "2025-07-12T13:31:17.326770Z"}, {"name": "execute", "started_at": "2025-07-12T13:31:17.327688Z", "completed_at": "2025-07-12T13:31:17.384702Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.07052803039550781, "adapter_response": {"_message": "CREATE VIEW", "code": "CREATE VIEW", "rows_affected": -1}, "message": "CREATE VIEW", "failures": null, "unique_id": "model.medical_dbt.fct_messages", "compiled": true, "compiled_code": "-- models/marts/fct_messages.sql\n\nWITH stg_messages AS (\n    SELECT\n        id,\n        channel_name,\n        message_id,\n        message_text,\n        message_date,\n        views_count,\n        forwards_count,\n        replies_count,\n        has_reactions,\n        has_photo,\n        product_mentions,\n        scraped_at\n    FROM \"medical_insights\".\"public\".\"stg_telegram_messages\"\n),\n\nchannels AS (\n    SELECT\n        channel_name,\n        channel_sk\n    FROM \"medical_insights\".\"public\".\"dim_channels\"\n),\n\ndates AS (\n    SELECT\n        date_day,\n        year,\n        month,\n        day_of_month\n    FROM \"medical_insights\".\"public\".\"dim_dates\"\n)\n\nSELECT\n    sm.id AS message_pk,\n    sm.message_id,\n    sm.message_text,\n    LENGTH(sm.message_text) AS message_length,\n    sm.message_date,\n    sm.views_count,\n    sm.forwards_count,\n    sm.replies_count,\n    sm.has_reactions,\n    sm.has_photo,\n    sm.product_mentions,\n    sm.scraped_at,\n    c.channel_sk,\n    d.date_day AS message_date_key\nFROM stg_messages sm\nLEFT JOIN channels c ON sm.channel_name = c.channel_name\nLEFT JOIN dates d ON sm.message_date::DATE = d.date_day", "relation_name": "\"medical_insights\".\"public\".\"fct_messages\"", "batch_results": null}], "elapsed_time": 0.6089215278625488, "args": {"introspect": true, "select": [], "source_freshness_run_project_hooks": true, "project_dir": "/app/src/dbt", "partial_parse": true, "state_modified_compare_vars": false, "static_parser": true, "print": true, "profiles_dir": "/app/src/dbt", "write_json": true, "version_check": true, "log_format": "default", "log_level": "info", "empty": false, "use_colors_file": true, "favor_state": false, "skip_nodes_if_on_run_start_fails": false, "use_colors": true, "log_file_max_bytes": 10485760, "send_anonymous_usage_stats": true, "require_nested_cumulative_type_params": false, "printer_width": 80, "show_resource_report": false, "state_modified_compare_more_unrendered_values": false, "cache_selected_only": false, "partial_parse_file_diff": true, "validate_macro_args": false, "vars": {}, "require_explicit_package_overrides_for_builtin_materializations": true, "which": "run", "indirect_selection": "eager", "require_batched_execution_for_custom_microbatch_strategy": false, "macro_debugging": false, "log_level_file": "debug", "log_path": "/app/src/dbt/logs", "require_all_warnings_handled_by_warn_error": false, "populate_cache": true, "quiet": false, "upload_to_artifacts_ingest_api": false, "require_yaml_configuration_for_mf_time_spines": false, "use_fast_test_edges": false, "warn_error_options": {"error": [], "warn": [], "silence": []}, "show_all_deprecations": false, "defer": false, "exclude": [], "invocation_command": "dbt run --project-dir /app/src/dbt --profiles-dir /app/src/dbt", "log_format_file": "debug", "strict_mode": false, "require_resource_names_without_spaces": true}}